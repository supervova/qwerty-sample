%btn {
  --display: inline-flex;

  appearance: none;
  border: 0;
  cursor: pointer;
  display: var(--display);
  align-items: center;
  justify-content: center;
  font-weight: 400;
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  user-select: none;
  vertical-align: middle;

  &:focus {
    outline: 0;
  }
}

// in fact, it is .btn.is-2ry and .btn.is-default
.btn,
%btn-base {
  @extend %btn, %label;

  --padding: 0 #{$size-2};

  background-color: var(--color-ink-accent);
  border-radius: var(--shape-border-radius-base);
  font-weight: 500;
  text-decoration: none;
  padding: var(--padding);
  height: $size-6;
  transition: var(--motion-duration-sm) var(--motion-easing-base);

  &:hover {
    background-color: var(--color-background-alt);
    text-decoration: none;
  }

  &:active {
    box-shadow:
      inset 0 0 0 1px var(--color-ink-border),
      inset 0 3px 5px var(--color-ink-border),
      inset 0 0 0 100px var(--color-ink-accent);
  }

  &:focus,
  &:active:focus {
    outline: 0;
  }

  &.is-compact {
    --padding: 0 #{$size-1p5};
  }

  &.is-lg {
    height: $size-6;
  }

  @include media-breakpoint-up(md) {
    --padding: 0 #{$size-3};
  }
}


.btn:not(.is-icon):not(.is-close) {
  padding-top: .2rem;
  padding-bottom: 0;

  .icon {
    transform: translateY(-.1rem);
  }
}

.btn.is-primary,
.btn-primary,
%btn-primary {
  background-color: var(--color-background-primary-dark);
  background-image: var(--color-primary-gradient-dark);
  color: var(--color-ink-inverse-base);
  text-shadow: 0 1px 0 hsl(var(--color-ink-shadow) / .12);
  transition:
    filter var(--motion-duration-sm),
    box-shadow var(--motion-duration-sm);

  &:hover {
    background-color: var(--color-background-primary-dark);
    background-image: var(--color-primary-gradient-dark);
    color: var(--color-ink-inverse-base);
    filter: brightness(var(--color-brightness-hover));
    text-shadow: none;
  }

  &:focus {
    box-shadow: var(--layer-box-shadow-focus-outline);
  }

  &:active {
    background-image: none;
    box-shadow:
      inset 0 0 0 1px var(--color-ink-base),
      inset 0 3px 5px var(--color-ink-base),
      inset 0 0 0 100px var(--color-ink-accent);
  }
}

.btn.is-outline,
.btn-info,
.btn-warning,
.btn-success,
%btn-outline {
  background-color: transparent;
  box-shadow: inset 0 0 0 1px var(--color-ink-border);
  color: var(--color-ink-3ry);
  transition:
    background-color var(--motion-duration-sm),
    box-shadow var(--motion-duration-sm);

  &:hover {
    background-color: var(--color-background-alt);
    color: var(--color-ink-primary-text);
  }

  &:focus {
    box-shadow: var(--layer-box-shadow-focus-outline);
  }
}

.btn.is-outline.is-inverse {
  box-shadow: inset 0 0 0 1px var(--color-ink-inverse-2ry);
  color: var(--color-ink-inverse-base);
  text-shadow: 0 .1rem 0 var(--color-ink-border);

  &:hover {
    background-color: hsl(var(--h) var(--s) 40%);
    color: var(--color-ink-inverse-base);
  }

  &:focus {
    box-shadow: 0 0 0 .4rem var(--color-ink-inverse-2ry);
  }
}

// GHOST (not underlined links like)
.btn.is-ghost,
%btn-ghost {
  @extend %btn;

  background-color: transparent;
  color: var(--color-ink-link);

  &:hover {
    text-decoration: none;
  }

  &:focus {
    box-shadow: var(--layer-box-shadow-focus-outline);
  }
}

.btn.is-icon {
  --padding: 0;

  width: $size-6;
  height: $size-6;

  &:focus {
    box-shadow: var(--layer-box-shadow-focus-outline);
  }
}

.btn.is-icon.is-ghost {
  background-color: transparent;

  &:hover {
    background-color: var(--color-background-alt);
  }
}

// STAND-ALONE

.is-stand-alone {
  @include media-breakpoint-up(sm) {
    flex-basis: 0;
    margin: 0 auto;
  }
}

// BUTTON GROUP

.buttons,
%buttons {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  list-style: none;
  padding: 0;

  li {
    padding: 0;
  }

  .btn,
  li {
    margin-bottom: $size-1;
    margin-right: $size-1;

    &:last-child {
      margin-right: 0;
    }
  }

  @include media-breakpoint-down(sm) {
    justify-content: center;
  }
}

.buttons.is-outline,
%buttons-outline {
  border: .1rem solid var(--color-ink-border);
  border-radius: var(--shape-border-radius-base);
  padding: $size-half;
}

.buttons.is-social-login {
  @extend %buttons-outline;

  margin-bottom: $size-line * 2;
}

// -----------------------------------------------------------------------------
// CLOSE
// -----------------------------------------------------------------------------

.btn.is-close {
  --padding: #{$size-half};
  border-radius: 50%;
  flex-shrink: 0;
  transform: translateY(-.4rem);
  height: auto;
}

// Legacy
// stylelint-disable selector-no-qualifying-type
button.close {
  background: var(--asset-data-image-x-mark) no-repeat 50%;
  border-radius: 50%;
  width: $size-5;
  height: $size-5;

  > span {
    display: none;
  }
}
// eslint-enable selector-no-qualifying-type

// -----------------------------------------------------------------------------
// ACCESSIBLE TOGGLE BUTTON
// -----------------------------------------------------------------------------

// https://material.io/components/buttons#toggle-button

// MARKUP AND SCRIPTING

// This button is NOT active
// button.btn.is-fave(aria-label='Favorite', aria-pressed='false') ❤

// This button IS
// button.fave(aria-label='Favorite', aria-pressed='true') ❤

// Change the attribute value using the setAttribute() method.
// btn.setAttribute('aria-pressed', true);
// btn.setAttribute('aria-pressed', false);

.btn.is-toggle[aria-pressed='true'] {
  color: var(--color-ink-primary-text);
}
